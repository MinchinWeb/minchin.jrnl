name: Testing

on:
  push:
    branches: [ develop, release, phoenix ]
    paths:
    - 'minchin/**'
    - 'features/**'
    - 'tests/**'
    - 'requirements.txt'
    - 'pyproject.toml'
    - '.github/workflows/testing.yaml'
  pull_request:
    branches: [ develop ]
    paths:
    - 'minchin/**'
    - 'features/**'
    - 'tests/**'
    - 'requirements.txt'
    - 'pyproject.toml'
    - '.github/workflows/testing.yaml'
  workflow_dispatch:

jobs:
  test:
    if: >
      ! contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [
          # pip-tools 7 not supported on Python 3.7; would need to lock version
          # of pip as well
          # 3.8,
          # 3.9,
          # "3.10",
          "3.11",
        ]
        os: [
          ubuntu-latest,
          # macos-latest,
          # windows-latest,
        ]
        # exclude:
        #   - os: windows-latest
        #     python-version: 3.11

    steps:
    # https://abbbi.github.io/actions/
    # disables some Ubuntu functionality that we don't need in a "throw away" runtime
    - uses: abbbi/github-actions-tune@v1

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: 'requirements.txt'

    - name: Upgrade Pip, etc
      run: python -m pip install pip setuptools wheel --upgrade

    # - name: Install invoke, etc
    #   run: pip install invoke minchin.text

    - name: Install pip-tools
      run: pip install pip-tools

    # - name: Install requirements (via invoke)
    #   run: invoke upgrade --requirements-file build --verbose

    - name: Install requirements (via pip-sync)
      run: pip-sync

    # TODO: use pip-tools and dev-requirements.txt
    - name: Install other dependencies
      run: |
        pip install .
        pip install black
        pip install pyflakes
        pip install pytest
        pip install behave toml

    # TODO: split linting from unit tests
    - name: Code formatting (Black)
      if: success() || failure()
      run: |
        black --version
        black --check --diff .

    - name: Code Style (PyFlakes)
      if: success() || failure()
      run: |
        pyflakes --version
        pyflakes minchin features tests

    - name: Test with pytest
      if: success() || failure()
      run: pytest --junitxml=reports/pytest/results.xml

    - name: Test with behave
      if: success() || failure()
      run: behave --no-skipped --format progress2 --junit --junit-directory reports/behave
