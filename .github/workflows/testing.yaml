name: Testing

on:
  push:
    branches: [ develop, release, phoenix ]
    paths:
    - 'minchin/**'
    - 'features/**'
    - 'tests/**'
    - 'requirements.txt'
    - 'pyproject.toml'
  pull_request:
    branches: [ develop ]
    paths:
    - 'minchin/**'
    - 'features/**'
    - 'tests/**'
    - 'requirements.txt'
    - 'pyproject.toml'
  workflow_dispatch:

jobs:
  test:
    if: >
      ! contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [
          # pip-tools 7 not supported on Python 3.7; would need to lock version
          # of pip as well
          # 3.8,
          # 3.9,
          # "3.10",
          "3.11",
        ]
        os: [
          ubuntu-latest,
          # macos-latest,
          # windows-latest,
        ]
        # exclude:
        #   - os: windows-latest
        #     python-version: 3.11

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: poetry cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}-${{ matrix.python-version }}-v2

    # use pip-tools and dev-requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install pip --upgrade
        pip install setuptools wheel --upgrade
        pip install pip-tools
        pip install .
        pip-sync requirements.txt
        pip install black
        pip install pyflakes
        pip install pytest
        pip install behave toml

    - name: Code formatting (Black)
      if: success() || failure()
      run: |
        black --version
        black --check --diff .

    - name: Code Style (PyFlakes)
      if: success() || failure()
      run: |
        pyflakes --version
        pyflakes minchin features tests

    - name: Test with pytest
      if: success() || failure()
      run: pytest --junitxml=reports/pytest/results.xml

    - name: Test with behave
      if: success() || failure()
      run: behave --no-skipped --format progress2 --junit --junit-directory reports/behave
